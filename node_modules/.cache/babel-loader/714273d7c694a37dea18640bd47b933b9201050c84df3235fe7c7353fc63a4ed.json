{"ast":null,"code":"var _jsxFileName = \"/Users/surajkumar/ctfonline/CTFTACHYON24/src/components/PasswordCrackingChallenge.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PasswordCrackingChallenge.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordCrackingChallenge = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [message, setMessage] = useState('');\n  const correctAnswer = \"FLAG{example_password}\"; // Replace 'example_password' with the actual password\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (userInput === correctAnswer) {\n      setMessage('Congratulations! You solved the challenge.');\n    } else {\n      setMessage('Incorrect! Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"challenge-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Challenge 2: Password Cracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your task is to crack the hash provided in the file to reveal the flag. The answer format should be \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"FLAG\", cracked_password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter FLAG{...}\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"challenge-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordCrackingChallenge, \"eUnAp9Bk3/7dWctXuSQzCETso3s=\");\n_c = PasswordCrackingChallenge;\nexport default PasswordCrackingChallenge;\nvar _c;\n$RefreshReg$(_c, \"PasswordCrackingChallenge\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordCrackingChallenge","_s","userInput","setUserInput","message","setMessage","correctAnswer","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cracked_password","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/surajkumar/ctfonline/CTFTACHYON24/src/components/PasswordCrackingChallenge.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './PasswordCrackingChallenge.css';\n\nconst PasswordCrackingChallenge = () => {\n  const [userInput, setUserInput] = useState('');\n  const [message, setMessage] = useState('');\n  const correctAnswer = \"FLAG{example_password}\"; // Replace 'example_password' with the actual password\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (userInput === correctAnswer) {\n      setMessage('Congratulations! You solved the challenge.');\n    } else {\n      setMessage('Incorrect! Try again.');\n    }\n  };\n\n  return (\n    <div className=\"challenge-container\">\n      <h1>Challenge 2: Password Cracking</h1>\n      <p>\n        Your task is to crack the hash provided in the file to reveal the flag. \n        The answer format should be <strong>FLAG{cracked_password}</strong>.\n      </p>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter FLAG{...}\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {message && <p className=\"challenge-message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default PasswordCrackingChallenge;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,aAAa,GAAG,wBAAwB,CAAC,CAAC;;EAEhD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIP,SAAS,KAAKI,aAAa,EAAE;MAC/BD,UAAU,CAAC,4CAA4C,CAAC;IAC1D,CAAC,MAAM;MACLA,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCZ,OAAA;MAAAY,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvChB,OAAA;MAAAY,QAAA,GAAG,sGAE2B,eAAAZ,OAAA;QAAAY,QAAA,GAAQ,MAAI,EAACK,gBAAgB;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,KACrE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJhB,OAAA;MAAMkB,QAAQ,EAAEV,YAAa;MAAAI,QAAA,gBAC3BZ,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAElB,SAAU;QACjBmB,QAAQ,EAAGb,CAAC,IAAKL,YAAY,CAACK,CAAC,CAACc,MAAM,CAACF,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFhB,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNX,OAAO,iBAAIL,OAAA;MAAGW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEP;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACd,EAAA,CAlCID,yBAAyB;AAAAuB,EAAA,GAAzBvB,yBAAyB;AAoC/B,eAAeA,yBAAyB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}