{"ast":null,"code":"var _jsxFileName = \"/Users/surajkumar/CTFTACHYON24/src/components/ChallengeDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/ChallengeDashboard.js\nimport React, { useState } from 'react';\nimport './ChallengeDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst challenges = [{\n  id: 1,\n  title: 'Challenge 1',\n  difficulty: 'Easy',\n  status: 'Unlocked',\n  description: 'Solve a basic SQL injection vulnerability.'\n}, {\n  id: 2,\n  title: 'Challenge 2',\n  difficulty: 'Medium',\n  status: 'Locked',\n  description: 'Explore Cross-Site Scripting (XSS) in a form.'\n}, {\n  id: 3,\n  title: 'Challenge 3',\n  difficulty: 'Hard',\n  status: 'Locked',\n  description: 'Bypass authentication using CSRF techniques.'\n}\n// Add more challenges as needed\n];\nconst ChallengeDashboard = () => {\n  _s();\n  const [completed, setCompleted] = useState([false, false, false]); // Track completion status\n\n  const handleComplete = index => {\n    const newCompleted = [...completed];\n    newCompleted[index] = true;\n    setCompleted(newCompleted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CTF Challenge Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challenge-list\",\n      children: challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: challenge.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: challenge.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `difficulty ${challenge.difficulty.toLowerCase()}`,\n          children: [\"Difficulty: \", challenge.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status\",\n          children: [\"Status: \", completed[index] ? 'Completed' : challenge.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              width: completed[index] ? '100%' : '0%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleComplete(index),\n          children: completed[index] ? 'Challenge Completed' : 'Start Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hint-button\",\n          children: \"View Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, challenge.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeDashboard, \"FkjmfgNfxT7DzZwBuzHsfwOw2ho=\");\n_c = ChallengeDashboard;\nexport default ChallengeDashboard;\nvar _c;\n$RefreshReg$(_c, \"ChallengeDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","challenges","id","title","difficulty","status","description","ChallengeDashboard","_s","completed","setCompleted","handleComplete","index","newCompleted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","challenge","toLowerCase","style","width","onClick","_c","$RefreshReg$"],"sources":["/Users/surajkumar/CTFTACHYON24/src/components/ChallengeDashboard.js"],"sourcesContent":["// src/components/ChallengeDashboard.js\nimport React, { useState } from 'react';\nimport './ChallengeDashboard.css';\n\nconst challenges = [\n  { id: 1, title: 'Challenge 1', difficulty: 'Easy', status: 'Unlocked', description: 'Solve a basic SQL injection vulnerability.' },\n  { id: 2, title: 'Challenge 2', difficulty: 'Medium', status: 'Locked', description: 'Explore Cross-Site Scripting (XSS) in a form.' },\n  { id: 3, title: 'Challenge 3', difficulty: 'Hard', status: 'Locked', description: 'Bypass authentication using CSRF techniques.' },\n  // Add more challenges as needed\n];\n\nconst ChallengeDashboard = () => {\n  const [completed, setCompleted] = useState([false, false, false]); // Track completion status\n\n  const handleComplete = (index) => {\n    const newCompleted = [...completed];\n    newCompleted[index] = true;\n    setCompleted(newCompleted);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h2>CTF Challenge Dashboard</h2>\n      <div className=\"challenge-list\">\n        {challenges.map((challenge, index) => (\n          <div className=\"challenge-card\" key={challenge.id}>\n            <h3>{challenge.title}</h3>\n            <p>{challenge.description}</p>\n            <span className={`difficulty ${challenge.difficulty.toLowerCase()}`}>\n              Difficulty: {challenge.difficulty}\n            </span>\n            <span className=\"status\">\n              Status: {completed[index] ? 'Completed' : challenge.status}\n            </span>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress\"\n                style={{ width: completed[index] ? '100%' : '0%' }}\n              ></div>\n            </div>\n            <button onClick={() => handleComplete(index)}>\n              {completed[index] ? 'Challenge Completed' : 'Start Challenge'}\n            </button>\n            <button className=\"hint-button\">View Hint</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ChallengeDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}